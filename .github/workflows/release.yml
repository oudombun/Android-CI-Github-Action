name: Generate Release Bundle
on:
  push:
    branches:
      - 'release/*'

jobs:
  apk:
    name: Generate Release Bundle
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
        
      - name: Assemble Release Bundle
        run: |
          ./gradlew bundleRelease
        
      - name: Upload Bundle to Github Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: app
          path: app/build/outputs/bundle/release/app-release.aab

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/*/}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_RELEASE }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Release v${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false

      - name: Upload Bundle to Release
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_RELEASE }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./app/build/outputs/bundle/release/app-release.aab
          asset_name: app-release.aab
          asset_content_type: application/zip


#      - uses: r0adkll/sign-android-release@v1
#        name: Sign app APK
#        # ID used to access action output
#        id: sign_app
#        with:
#          releaseDirectory: app/build/outputs/bundle/release
#          signingKeyBase64: ${{ secrets.SIGN_KEY }}
#          alias: ${{ secrets.ALIAS }}
#          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
#          keyPassword: ${{ secrets.KEY_PASSWORD }}
